name: test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache node modules
        uses: actions/cache@v1
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Check code style
        run: |
          npm ci
          npm run prettier
          npm run lint

  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    services:
      test-server:
        credentials:
          username: ${{ github.repository }}
          password: ${{ secrets.GITHUB_TOKEN }}
        image: ghcr.io/databricks/databricks/databricks-thrift-test-server:0.1.0
        ports:
          - 8087:8087
    steps:
      - uses: actions/checkout@v2
      - name: Cache node modules
        uses: actions/cache@v1
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Run unit tests
        run: |
          npm ci
          npm run test
      # - name: Run e2e tests
      #   env:
      #     E2E_HOST: ${{secrets.E2E_HOST}}
      #     E2E_PATH: ${{secrets.E2E_PATH}}
      #     E2E_ACCESS_TOKEN: ${{secrets.E2E_ACCESS_TOKEN}}
      #     E2E_CATALOG: hive_metastore
      #     E2E_DATABASE: client_libs_test
      #     E2E_TABLE_SUFFIX: ${{github.sha}}
      #   run: |
      #     npm ci
      #     npm run e2e
      - name: Run integration tests
        run: |
          npm ci
          npm run integration
      - name: Coverage
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          verbose: true
